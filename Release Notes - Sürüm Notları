V 1.1
Projenin ana hattı oluşturuldu

V 1.2
Veritabanı eklendi

V 1.3
Brand ve Color nesneleri eklendi
Sql server tarafında yeni veri tabanı oluşturuldu 
Nesneler için Entity Framework yapısı oluşturuldu
Generic IEntityRepository altyapısı oluşturuldu
GetCarsByBrandId , GetCarsByColorId servisleri eklendi

V 1.4
Core katmanı oluşturuldu. 
Evrensel ve ortak kodlar Core katmanına taşındı
IEntity, IDto, IEntityRepository, EfEntityRepositoryBase dosyaları oluşturuldu, Core katmanına taşındı
Tüm sınıflar için CRUD operasyonları hazırlandı ve Console’da test edildi
Arabalar şu bilgiler olacak şekilde listelendi. CarName, BrandName, ColorName, DailyPrice.

V 1.5
Core katmanında Results yapılandırması yapıldı
Tüm Business sınıfları Results yapılandırmasına göre code refactoring edildi

V 1.6
Business
 Abstract
  User, Customer ve Rental Nesnelerinin Servisleri oluşturuldu
 Concrete
  User, Customer ve Rental Nesnelerinin Manger sınıfları oluşturuldu
 Constants
  Mesajlar güncellendi
  
Core

DataAccess
 Abstract
  User, Customer ve Rental Nesnelerinin interface'i oluşturuldu
 Concrete
  EntityFramework
   User, Customer, Rental Nesneleri için somut sınıf oluşturuldu
   Yeni oluşturulan Class’lar Veri Tabanı ile ilişkilendirildi
   
Entity
 Concrete
  User, customer, rental nesneleri eklendi
 Dtos
 RentalDetails Sınıfı eklendi

Hata no:1 Tablo birleştirememe
Primary key i olmayan bir tablo join edilemez
"Müşteri, tanımlanacak bir birincil anahtar gerektirir."
Customer a primary key eklendi

V 1.7
WebAPI katmanı eklendi
Tüm nesneler için Controller oluşturuldu

V 1.8
Autofac Desteği eklendi

 1. Business
  Autofac, Autofac.Extras.DynamicProxy Paketleri eklendi
  
  DependencyResolvers Klasörü oluşturuldu
  DependencyResolvers klasörü altında Autofac alt klasörü oluşturuldu
  Autofac klasörü içinde AutofacBusinessModule Class'ı oluşturuldu. IoC Container yapılandırması yapıldı
   
  ValidationRules klasörü oluşturuldu
  FluentValidation alt klasörü oluşturuldu ve FluentValidation paketi eklendi
  Tüm Classlar için Validation kuralları yazıldı
  

 2. Core
  CrossCuttingConcerns klasörü eklendi
  CrossCuttingConcerns klasörüne Validation klasörü eklendi
  Validation klasörüne static ValidationTool Sınıfı eklendi
  
  Utilities klasörüne Interceptors alt klasörü eklendi
  
  Aspects -> Autofac -> Validation klasörleri eklendi
  Validation klasörüne ValidationAspect sınıfı eklendi
  

 3. WebAPI
  Autofac Container kullanımı aktif hale getirildi

V 1.9

V 1.10
HATA_NO:2
Sisteme resim ekleyememe
 ImagePath in kapasitesi arttırıldı

HATA_NO:3
Sisteme Login olamama
 PasswordHash ve PassWordsalt Binary tipinden varBinary ye çekildi
